plugins {
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
}

group 'org.redacted'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation("net.dv8tion:JDA:5.1.2")
    implementation('org.json:json:20231013')
    implementation ('com.google.code.gson:gson:2.8.9')
    implementation('io.github.cdimascio:dotenv-java:3.0.0')
    implementation ('org.mongodb:mongodb-driver-sync:5.1.0')
    implementation ('org.apache.commons:commons-collections4:4.4')
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation ('org.apache.httpcomponents:httpclient:4.5.13')
    implementation ('org.apache.commons:commons-math3:3.6.1')
    implementation ('org.mongodb:mongodb-driver-sync:5.1.0')
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.41.2.2'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'org.seleniumhq.selenium:selenium-java:4.23.0'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.23.0'
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.htmlunit:htmlunit:4.11.1') {
            exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation 'io.github.bonigarcia:webdrivermanager:5.8.0'
    implementation 'org.seleniumhq.selenium:selenium-java:4.12.1' // or latest 4.x
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.12.1'// for auto driver management
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'org.redacted.Redacted' // Replace with your main class
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}